library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
data$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
data$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
df$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
#df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
# Convert sale_date to Date type for better handling
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
temp <- df[df$sale_date != 2020]
temp <- df[df$sale_date != 2020,]
head(temp)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# Plot distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_1m, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
# Plot distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 2. Separating houses with sale_price under/over 1,000,000
under_mil <- df[df$sale_price < 1000000,]
over_mil <- df[df$sale_price >= 1000000,]
# Convert sale_date to Date type for better handling
data$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 2. Separating houses with sale_price under/over 1,000,000
under_mil <- df[df$sale_price < 1000000,]
over_mil <- df[df$sale_price >= 1000000,]
# Convert sale_date to Date type for better handling
#data$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
head(under_mil)
head(over_mil)
nrow(under_mil)
nrow(over_mil)
# 3. Basic Correlation testing, not final vars to use
# A. sale_price and house_square_feet
corA1 <- cor(under_mil$sale_price, under_mil$house_square_feet)
print(corA1)
corA2 <- cor(over_mil$sale_price, over_mil$house_square_feet)
print(corA2)
# B. sale_price and bathrooms
corB1 <- cor(under_mil$sale_price, under_mil$bathrooms)
print(corB1)
corB2 <- cor(over_mil$sale_price, over_mil$bathrooms)
print(corB2)
# C. sales_price and fireplaces
corC1 <- cor(under_mil$sale_price, under_mil$fireplaces)
print(corC1)
corC2 <- cor(over_mil$sale_price, over_mil$fireplaces)
print(corC2)
# D. sales_price and stories
corD1 <- cor(under_mil$sale_price, under_mil$stories)
print(corD1)
corD2 <- cor(over_mil$sale_price, over_mil$stories)
print(corD2)
# E.
corE1 <- cor(under_mil$sale_price, under_mil$bedrooms)
print(corE1)
corE2 <- cor(over_mil$sale_price, over_mil$bedrooms)
print(corE2)
table(df$waterfront_type)
# F. value counts
F1 <- table(df$exterior)
F2 <- table(df$utility_sewer)
print('Exterior')
print(F1)
print('Utility')
print(F2)
age <- c(23, 35, 42, 22, 26, 35, 47, 18, 29, 30)
# Creating bins (e.g., age groups)
age_bins <- cut(age, breaks = c(15, 25, 35, 45, 55))
table(age_bins)
# Plot distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(under_1m$house_square_feet)
# Plot distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(under_mil$house_square_feet)
# Show the plot
house_square_feet
# Distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(under_mil$house_square_feet)
# Show the plot
house_square_feet
# Distribution of house square feet for houses under $1M
house_square_feet <- ggplot(over_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Distribution of House Square Feet (Over $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(over_mil$house_square_feet)
# Show the plot
house_square_feet
library(dplyr)
library(ggplot2)
library(knitr)
library(summarytools)
library(readr)
library(gridExtra)
# 1. Loading and displaying the data
df <- read.csv('pierce_co_house_sales.csv')
head(df)
df$sale_date <- as.Date(df$sale_date, format="%m/%d/%Y")
head(df)
# 2. Separating houses with sale_price under/over 1,000,000
under_mil <- df[df$sale_price < 1000000,]
over_mil <- df[df$sale_price >= 1000000,]
# Convert sale_date to Date type for better handling
#data$sale_date <- as.Date(data$sale_date, format="%m/%d/%Y")
head(under_mil)
head(over_mil)
nrow(under_mil)
nrow(over_mil)
# 3. Basic Correlation testing, not final vars to use
# A. sale_price and house_square_feet
corA1 <- cor(under_mil$sale_price, under_mil$house_square_feet)
print(corA1)
corA2 <- cor(over_mil$sale_price, over_mil$house_square_feet)
print(corA2)
# B. sale_price and bathrooms
corB1 <- cor(under_mil$sale_price, under_mil$bathrooms)
print(corB1)
corB2 <- cor(over_mil$sale_price, over_mil$bathrooms)
print(corB2)
# C. sales_price and fireplaces
corC1 <- cor(under_mil$sale_price, under_mil$fireplaces)
print(corC1)
corC2 <- cor(over_mil$sale_price, over_mil$fireplaces)
print(corC2)
# D. sales_price and stories
corD1 <- cor(under_mil$sale_price, under_mil$stories)
print(corD1)
corD2 <- cor(over_mil$sale_price, over_mil$stories)
print(corD2)
# E.
corE1 <- cor(under_mil$sale_price, under_mil$bedrooms)
print(corE1)
corE2 <- cor(over_mil$sale_price, over_mil$bedrooms)
print(corE2)
table(df$waterfront_type)
# F. value counts
F1 <- table(df$exterior)
F2 <- table(df$utility_sewer)
print('Exterior')
print(F1)
print('Utility')
print(F2)
age <- c(23, 35, 42, 22, 26, 35, 47, 18, 29, 30)
# Creating bins (e.g., age groups)
age_bins <- cut(age, breaks = c(15, 25, 35, 45, 55))
table(age_bins)
# 4. Distributions
# Distribution of house square feet for houses under $1M
house_square_feet <- ggplot(under_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "green", color = "black") +
labs(title = "Distribution of House Square Feet (Under $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(under_mil$house_square_feet)
# Show the plot
house_square_feet
# Distribution of house square feet for houses over $1M
house_square_feet <- ggplot(over_mil, aes(x = house_square_feet)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Distribution of House Square Feet (Over $1M)", x = "Square Feet", y = "Frequency")
# Summary statistics for house square feet
summary(over_mil$house_square_feet)
# Show the plot
house_square_feet
